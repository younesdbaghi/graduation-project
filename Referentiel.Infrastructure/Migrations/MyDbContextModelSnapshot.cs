// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Referentiel.Infrastructure.Data;

#nullable disable

namespace Referentiel.Infrastructure.Migrations
{
    [DbContext(typeof(MyDbContext))]
    partial class MyDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Referentiel.Domain.Entities.PaginationAdminEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("PagAdminProjects")
                        .HasColumnType("int");

                    b.Property<int>("PagAdminPublications")
                        .HasColumnType("int");

                    b.Property<int>("PagAdminQuotations")
                        .HasColumnType("int");

                    b.Property<int>("PagAdminUsers")
                        .HasColumnType("int");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("PaginationAdmin");
                });

            modelBuilder.Entity("Referentiel.Domain.Entities.PaginationUserEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("PagUserPublications")
                        .HasColumnType("int");

                    b.Property<int>("PagUserWeeks")
                        .HasColumnType("int");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("PaginationUser");
                });

            modelBuilder.Entity("Referentiel.Domain.Entities.ProjectEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("HeuresTotal")
                        .HasColumnType("int");

                    b.Property<string>("ProjectName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Project");
                });

            modelBuilder.Entity("Referentiel.Domain.Entities.ProjectQuotationEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("ProjectId")
                        .HasColumnType("int");

                    b.Property<string>("Quotation")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ProjectId");

                    b.ToTable("ProjectQuotation");
                });

            modelBuilder.Entity("Referentiel.Domain.Entities.ProjectStatisticEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<float>("Progress")
                        .HasColumnType("real");

                    b.Property<int?>("ProjectId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProjectId");

                    b.ToTable("ProjectStatistic");
                });

            modelBuilder.Entity("Referentiel.Domain.Entities.PublicationEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Heure")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Publication");
                });

            modelBuilder.Entity("Referentiel.Domain.Entities.UserEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Activity")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Admin")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("User");
                });

            modelBuilder.Entity("Referentiel.Domain.Entities.UserWeekEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("StatusWeek")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.Property<string>("WeekNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("UserWeek");
                });

            modelBuilder.Entity("Referentiel.Domain.Entities.UserWeekProjectEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AppFriday")
                        .HasColumnType("int");

                    b.Property<int>("AppMonday")
                        .HasColumnType("int");

                    b.Property<int>("AppSaturday")
                        .HasColumnType("int");

                    b.Property<int>("AppSunday")
                        .HasColumnType("int");

                    b.Property<int>("AppThursday")
                        .HasColumnType("int");

                    b.Property<int>("AppTuesday")
                        .HasColumnType("int");

                    b.Property<int>("AppWednesday")
                        .HasColumnType("int");

                    b.Property<int>("Bonus")
                        .HasColumnType("int");

                    b.Property<string>("FridayStatus")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MondayStatus")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("NoAppFriday")
                        .HasColumnType("int");

                    b.Property<int>("NoAppMonday")
                        .HasColumnType("int");

                    b.Property<int>("NoAppSaturday")
                        .HasColumnType("int");

                    b.Property<int>("NoAppSunday")
                        .HasColumnType("int");

                    b.Property<int>("NoAppThursday")
                        .HasColumnType("int");

                    b.Property<int>("NoAppTuesday")
                        .HasColumnType("int");

                    b.Property<int>("NoAppWednesday")
                        .HasColumnType("int");

                    b.Property<string>("ProjectName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Quotation")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SaturdayStatus")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SundayStatus")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ThursdayStatus")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TotalApp")
                        .HasColumnType("int");

                    b.Property<int>("TotalNoApp")
                        .HasColumnType("int");

                    b.Property<string>("TuesdayStaus")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.Property<string>("WednesdayStatus")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("WeekId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.HasIndex("WeekId");

                    b.ToTable("UserWeekProject");
                });

            modelBuilder.Entity("Referentiel.Domain.Entities.PaginationAdminEntity", b =>
                {
                    b.HasOne("Referentiel.Domain.Entities.UserEntity", "User")
                        .WithMany()
                        .HasForeignKey("UserId");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Referentiel.Domain.Entities.PaginationUserEntity", b =>
                {
                    b.HasOne("Referentiel.Domain.Entities.UserEntity", "User")
                        .WithMany()
                        .HasForeignKey("UserId");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Referentiel.Domain.Entities.ProjectQuotationEntity", b =>
                {
                    b.HasOne("Referentiel.Domain.Entities.ProjectEntity", "Project")
                        .WithMany("ProjectQuotations")
                        .HasForeignKey("ProjectId");

                    b.Navigation("Project");
                });

            modelBuilder.Entity("Referentiel.Domain.Entities.ProjectStatisticEntity", b =>
                {
                    b.HasOne("Referentiel.Domain.Entities.ProjectEntity", "Project")
                        .WithMany("ProjectStatistics")
                        .HasForeignKey("ProjectId");

                    b.Navigation("Project");
                });

            modelBuilder.Entity("Referentiel.Domain.Entities.PublicationEntity", b =>
                {
                    b.HasOne("Referentiel.Domain.Entities.UserEntity", "User")
                        .WithMany()
                        .HasForeignKey("UserId");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Referentiel.Domain.Entities.UserWeekEntity", b =>
                {
                    b.HasOne("Referentiel.Domain.Entities.UserEntity", "User")
                        .WithMany()
                        .HasForeignKey("UserId");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Referentiel.Domain.Entities.UserWeekProjectEntity", b =>
                {
                    b.HasOne("Referentiel.Domain.Entities.UserEntity", "User")
                        .WithMany("UserWeekProjects")
                        .HasForeignKey("UserId");

                    b.HasOne("Referentiel.Domain.Entities.UserWeekEntity", "Week")
                        .WithMany("UserWeekProjects")
                        .HasForeignKey("WeekId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");

                    b.Navigation("Week");
                });

            modelBuilder.Entity("Referentiel.Domain.Entities.ProjectEntity", b =>
                {
                    b.Navigation("ProjectQuotations");

                    b.Navigation("ProjectStatistics");
                });

            modelBuilder.Entity("Referentiel.Domain.Entities.UserEntity", b =>
                {
                    b.Navigation("UserWeekProjects");
                });

            modelBuilder.Entity("Referentiel.Domain.Entities.UserWeekEntity", b =>
                {
                    b.Navigation("UserWeekProjects");
                });
#pragma warning restore 612, 618
        }
    }
}
